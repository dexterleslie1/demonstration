- name: "启动api服务"
  hosts: api
  tasks:
    - name: "使用Docker Compose启动api服务"
      shell: |
        set -e
        cd ~/deployer-flash-sale/service
        docker compose pull && docker compose up -d

- name: "启动crond服务"
  hosts: crond
  tasks:
    - name: "使用Docker Compose启动crond服务"
      shell: |
        set -e
        cd ~/deployer-flash-sale/crond
        docker compose pull && docker compose up -d

- name: "启动zookeeper、redis等公共服务"
  hosts: common
  tasks:
    - name: "使用Docker Compose启动zookeeper、redis等公共服务"
      shell: |
        set -e
        cd ~/deployer-flash-sale/common
        docker compose pull && docker compose up -d

- name: "启动prometheus公共服务"
  hosts: common
  tasks:
    - name: "使用Docker Compose启动prometheus公共服务"
      shell: |
        set -e
        cd ~/deployer-flash-sale/prometheus
        docker compose pull && docker compose up -d

- name: "启动数据库服务"
  hosts: db
  tasks:
    - name: "使用Docker Compose启动数据库服务"
      shell: |
        # 命令执行错误马上退出 shell
        set -e
        cd ~/deployer-flash-sale/db
        # 拉取最新镜像并启动
        docker compose pull && docker compose up -d

#- name: "启动RocketMQ服务"
#  hosts: rocketmq
#  tasks:
#    - name: "使用Docker Compose启动RocketMQ服务"
#      shell: |
#        set -e
#        cd ~/deployer-flash-sale/rocketmq
#        docker compose pull && docker compose up -d
- name: "启动Kafka服务"
  hosts: rocketmq
  tasks:
    - name: "使用Docker Compose启动Kafka服务"
      shell: |
        set -e
        cd ~/deployer-flash-sale/kafka
        docker compose pull && docker compose up -d

- name: "启动Cassandra服务"
  hosts: cassandra
  tasks:
    - name: "使用Docker Compose启动Cassandra服务"
      shell: |
        set -e
        cd ~/deployer-flash-sale/cassandra
        docker compose pull && docker compose up -d
    - name: "等待Cassandra服务就绪"
      wait_for:
        host: "{{ groups['cassandra'][0] }}"
        port: 9042
        # 指定在开始检查端口之前等待的秒数。当你希望在服务启动后给它一些时间来初始化，而不是立即开始检查端口是否可用时使用。
        delay: 5
        # 指定等待端口可用的最大时间（以秒为单位）。如果在指定的时间内端口没有变为可用状态，任务将失败。用于防止任务无限期地等待，特别是在服务启动失败或配置错误的情况下。
        timeout: 300
      delegate_to: localhost
      run_once: true
    - name: "初始化Cassandra数据库和表结构"
      shell: |
        set -e
        cd ~/deployer-flash-sale/cassandra
        docker compose exec node0 sh -c "cqlsh -e \"source '/scripts/data.cql'\""
      # 任务只在第一个主机上运行一次
      run_once: true
      delegate_to: "{{ groups['cassandra'][0] }}"

- name: "启动OpenResty服务"
  hosts: openresty
  tasks:
    - name: "使用Docker Compose启动OpenResty服务"
      shell: |
        set -e
        cd ~/deployer-flash-sale/openresty
        docker compose pull && docker compose up -d
