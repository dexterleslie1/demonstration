# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

#user  nobody;
#worker_processes 1;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;



#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

error_log  logs/error.log  debug;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # 辅助lua脚本获取客户端真实ip
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    lua_shared_dict dict_lock 1m;

    server {
		listen       80;
		server_name  localhost;

		location / {
		   proxy_set_header X-Proxy-IP  "代理机1";
		   proxy_set_header Host $host:$server_port;
		   proxy_http_version 1.1;
		   proxy_set_header Connection '';

		   content_by_lua_block {
				-- 参考资料
				-- https://blog.csdn.net/jgywoshiyy/article/details/121235045
				-- https://github.com/openresty/lua-resty-lock
				local resty_lock = require "resty.lock"
				-- exptime=60 60秒后自动解锁
				-- timeout=5 等待5秒后仍然获取不到锁自动放弃
				-- step=0.5 每半秒检查一下是否获取到锁
				local lock, err = resty_lock:new("dict_lock",{exptime=60,timeout=5,step=0.5})
				if not lock then
					ngx.log(ngx.ERR, "failed to create lock: " ..  err)
				end

				local elapsed, err = lock:lock('my_lock_handler')
				if not elapsed then
					ngx.log(ngx.ERR, "failed to acquire the lock: " .. err)
				end

				--[[local ok, err = lock:unlock()
				if not ok then
					ngx.log(ngx.ERR, "failed to unlock: " .. err)
				end]]

				ngx.header.content_type = "text/plain;charset=utf-8";
				local response = "你好，中国";
				ngx.say(response);
		   }
		}
	}
}
