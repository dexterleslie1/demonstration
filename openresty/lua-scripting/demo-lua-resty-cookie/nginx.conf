# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

#user  nobody;
#worker_processes 1;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;



#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

error_log  logs/error.log  debug;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    resolver 114.114.114.114;
    include       mime.types;
    default_type  application/octet-stream;

    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
	
    access_by_lua_block {
	local ck = require "resty.cookie"
        local cookie, err = ck:new()
        if not cookie then
        	ngx.log(ngx.ERR, err)
                return
        end

        -- get single cookie
        local field, err = cookie:get("lang")
	ngx.log(ngx.ERR, "cookie lang=", field)

        -- get all cookies
        local fields, err = cookie:get_all()
	if not (fields == nil) then
        	for k, v in pairs(fields) do
        		ngx.log(ngx.ERR, "cookie ", k, "=>", v)
       		end
	end

        -- set one cookie
        local ok, err = cookie:set({
        	key = "Name", value = "Bob", path = "/", max_age = 15 /*15秒后cookie失效*/
        })
        if not ok then
                ngx.log(ngx.ERR, err)
                return
        end

        -- set another cookie, both cookies will appear in HTTP response
        local ok, err = cookie:set({
        	key = "Age", value = "20",
        })
        if not ok then
                ngx.log(ngx.ERR, err)
                return
        end

	ngx.status = 200
	ngx.header.content_type = "text/html;charset=utf-8"
	ngx.say("你好")
    }

    server {
	listen       80;
	server_name  localhost;
    }
}
