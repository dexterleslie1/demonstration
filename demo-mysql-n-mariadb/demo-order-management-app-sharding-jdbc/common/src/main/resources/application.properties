spring.profiles.active=dev

server.tomcat.max-threads=512
server.tomcat.threads.max=512
server.tomcat.max-connections=20480
server.tomcat.connection-timeout=65s
server.tomcat.accept-count=20480

#------------------------------------------- \u4E0D\u5206\u5E93\u5206\u8868 -------------------------------------------
spring.shardingsphere.datasource.names=default-data-source

# \u9ED8\u8BA4\u6570\u636E\u6E90\uFF0C\u6CA1\u6709\u914D\u7F6E\u5206\u7247\u7B56\u7565\u7684\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u6570\u636E\u6E90
spring.shardingsphere.sharding.default-data-source-name=default-data-source
spring.shardingsphere.datasource.default-data-source.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.default-data-source.maximum-pool-size=512
spring.shardingsphere.datasource.default-data-source.minimum-idle=32
spring.shardingsphere.datasource.default-data-source.driver-class-name=org.mariadb.jdbc.Driver
spring.shardingsphere.datasource.default-data-source.jdbc-url=jdbc:mariadb://${common_db_host:localhost}:${common_db_port:3306}/demo?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.default-data-source.username=root
spring.shardingsphere.datasource.default-data-source.password=123456
#------------------------------------------- \u4E0D\u5206\u5E93\u5206\u8868 -------------------------------------------

#------------------------------------------- \u53EA\u6C34\u5E73\u5206\u8868 -------------------------------------------
#spring.shardingsphere.datasource.names=default-data-source,ds1
#
## \u9ED8\u8BA4\u6570\u636E\u6E90\uFF0C\u6CA1\u6709\u914D\u7F6E\u5206\u7247\u7B56\u7565\u7684\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u6570\u636E\u6E90
#spring.shardingsphere.sharding.default-data-source-name=default-data-source
#spring.shardingsphere.datasource.default-data-source.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.default-data-source.maximum-pool-size=32
#spring.shardingsphere.datasource.default-data-source.minimum-idle=10
#spring.shardingsphere.datasource.default-data-source.driver-class-name=org.mariadb.jdbc.Driver
#spring.shardingsphere.datasource.default-data-source.jdbc-url=jdbc:mariadb://${common_db_host:localhost}:${common_db_port:3306}/demo?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.default-data-source.username=root
#spring.shardingsphere.datasource.default-data-source.password=123456
#
#spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds1.maximum-pool-size=32
#spring.shardingsphere.datasource.ds1.minimum-idle=10
#spring.shardingsphere.datasource.ds1.driver-class-name=org.mariadb.jdbc.Driver
#spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mariadb://${common_db_host:localhost}:${common_db_port:3306}/demo?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=123456
#
## \u6307\u5B9At_order\u8868\u7684\u4E3B\u952E\u751F\u6210\u7B56\u7565\u4E3ASNOWFLAKE
#spring.shardingsphere.sharding.tables.t_order.key-generator.column=id
#spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
## \u6307\u5B9Aorder\u8868\u7684\u6570\u636E\u5206\u5E03\u60C5\u51B5\uFF0C\u914D\u7F6E\u6570\u636E\u8282\u70B9
#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds1.t_order$->{1..32}
## order\u8868\u7684\u5206\u7247\u7B56\u7565\uFF0C\u5206\u7247\u7B56\u7565\u5305\u62EC\u5206\u7247\u952E\u548C\u5206\u7247\u7B97\u6CD5
#spring.shardingsphere.sharding.tables.t_order.table-strategy.complex.sharding-columns=id,userId
#spring.shardingsphere.sharding.tables.t_order.table-strategy.complex.algorithm-class-name=com.future.demo.util.TableMyComplexKeysShardingAlgorithm
#
#spring.shardingsphere.sharding.tables.t_order_detail.key-generator.column=id
#spring.shardingsphere.sharding.tables.t_order_detail.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.t_order_detail.actual-data-nodes=ds1.t_order_detail$->{1..32}
#spring.shardingsphere.sharding.tables.t_order_detail.table-strategy.standard.sharding-column=orderId
#spring.shardingsphere.sharding.tables.t_order_detail.table-strategy.standard.precise-algorithm-class-name=com.future.demo.util.TableMyPreciseShardingAlgorithm
## \u7ED1\u5B9A\u8868\u5173\u952E\u914D\u7F6E
#spring.shardingsphere.sharding.binding-tables[0]=t_order,t_order_detail
#------------------------------------------- \u53EA\u6C34\u5E73\u5206\u8868 -------------------------------------------

#------------------------------------------- \u6C34\u5E73\u5206\u5E93\u5206\u8868 -------------------------------------------
#spring.shardingsphere.datasource.names=default-data-source,ds1,ds2,ds3,ds4,ds5
#
## \u9ED8\u8BA4\u6570\u636E\u6E90\uFF0C\u6CA1\u6709\u914D\u7F6E\u5206\u7247\u7B56\u7565\u7684\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u6570\u636E\u6E90
#spring.shardingsphere.sharding.default-data-source-name=default-data-source
#spring.shardingsphere.datasource.default-data-source.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.default-data-source.maximum-pool-size=256
#spring.shardingsphere.datasource.default-data-source.minimum-idle=10
#spring.shardingsphere.datasource.default-data-source.driver-class-name=org.mariadb.jdbc.Driver
#spring.shardingsphere.datasource.default-data-source.jdbc-url=jdbc:mariadb://${common_db_host:localhost}:${common_db_port:3306}/demo?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.default-data-source.username=root
#spring.shardingsphere.datasource.default-data-source.password=123456
#
#spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
## \u8BBE\u7F6E Hikari \u8FDE\u63A5\u6C60
#spring.shardingsphere.datasource.ds1.maximum-pool-size=256
#spring.shardingsphere.datasource.ds1.minimum-idle=10
#spring.shardingsphere.datasource.ds1.driver-class-name=org.mariadb.jdbc.Driver
#spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mariadb://${sharding_db_host1:localhost}:${sharding_db_port1:3307}/demo?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=123456
#
#spring.shardingsphere.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds2.maximum-pool-size=256
#spring.shardingsphere.datasource.ds2.minimum-idle=10
#spring.shardingsphere.datasource.ds2.driver-class-name=org.mariadb.jdbc.Driver
#spring.shardingsphere.datasource.ds2.jdbc-url=jdbc:mariadb://${sharding_db_host2:localhost}:${sharding_db_port2:3308}/demo?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.ds2.username=root
#spring.shardingsphere.datasource.ds2.password=123456
#
#spring.shardingsphere.datasource.ds3.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds3.maximum-pool-size=256
#spring.shardingsphere.datasource.ds3.minimum-idle=10
#spring.shardingsphere.datasource.ds3.driver-class-name=org.mariadb.jdbc.Driver
#spring.shardingsphere.datasource.ds3.jdbc-url=jdbc:mariadb://${sharding_db_host3:localhost}:${sharding_db_port3:3309}/demo?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.ds3.username=root
#spring.shardingsphere.datasource.ds3.password=123456
#
#spring.shardingsphere.datasource.ds4.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds4.maximum-pool-size=256
#spring.shardingsphere.datasource.ds4.minimum-idle=10
#spring.shardingsphere.datasource.ds4.driver-class-name=org.mariadb.jdbc.Driver
#spring.shardingsphere.datasource.ds4.jdbc-url=jdbc:mariadb://${sharding_db_host4:localhost}:${sharding_db_port4:3310}/demo?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.ds4.username=root
#spring.shardingsphere.datasource.ds4.password=123456
#
#spring.shardingsphere.datasource.ds5.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds5.maximum-pool-size=256
#spring.shardingsphere.datasource.ds5.minimum-idle=10
#spring.shardingsphere.datasource.ds5.driver-class-name=org.mariadb.jdbc.Driver
#spring.shardingsphere.datasource.ds5.jdbc-url=jdbc:mariadb://${sharding_db_host5:localhost}:${sharding_db_port5:3311}/demo?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.ds5.username=root
#spring.shardingsphere.datasource.ds5.password=123456
#
#spring.shardingsphere.sharding.tables.t_product.key-generator.column=id
#spring.shardingsphere.sharding.tables.t_product.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.t_product.actual-data-nodes=ds$->{1..5}.t_product
#spring.shardingsphere.sharding.tables.t_product.database-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.t_product.database-strategy.inline.algorithm-expression=ds$->{id%5+1}
#
## \u6307\u5B9At_order\u8868\u7684\u4E3B\u952E\u751F\u6210\u7B56\u7565\u4E3ASNOWFLAKE
#spring.shardingsphere.sharding.tables.t_order.key-generator.column=id
#spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
## \u6307\u5B9Aorder\u8868\u7684\u6570\u636E\u5206\u5E03\u60C5\u51B5\uFF0C\u914D\u7F6E\u6570\u636E\u8282\u70B9
#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{1..5}.t_order$->{1..32}
##spring.shardingsphere.sharding.tables.t_order.database-strategy.complex.sharding-columns=id,userId
##spring.shardingsphere.sharding.tables.t_order.database-strategy.complex.algorithm-class-name=com.future.demo.util.DBMyComplexKeysShardingAlgorithm
### order\u8868\u7684\u5206\u7247\u7B56\u7565\uFF0C\u5206\u7247\u7B56\u7565\u5305\u62EC\u5206\u7247\u952E\u548C\u5206\u7247\u7B97\u6CD5
##spring.shardingsphere.sharding.tables.t_order.table-strategy.complex.sharding-columns=id,userId
##spring.shardingsphere.sharding.tables.t_order.table-strategy.complex.algorithm-class-name=com.future.demo.util.TableMyComplexKeysShardingAlgorithm
#spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=ds$->{id%5+1}
## order\u8868\u7684\u5206\u7247\u7B56\u7565\uFF0C\u5206\u7247\u7B56\u7565\u5305\u62EC\u5206\u7247\u952E\u548C\u5206\u7247\u7B97\u6CD5
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{id%32+1}
#
#spring.shardingsphere.sharding.tables.t_order_detail.key-generator.column=id
#spring.shardingsphere.sharding.tables.t_order_detail.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.t_order_detail.actual-data-nodes=ds$->{1..5}.t_order_detail$->{1..32}
##spring.shardingsphere.sharding.tables.t_order_detail.database-strategy.standard.sharding-column=orderId
##spring.shardingsphere.sharding.tables.t_order_detail.database-strategy.standard.precise-algorithm-class-name=com.future.demo.util.DBMyPreciseShardingAlgorithm
##spring.shardingsphere.sharding.tables.t_order_detail.table-strategy.standard.sharding-column=orderId
##spring.shardingsphere.sharding.tables.t_order_detail.table-strategy.standard.precise-algorithm-class-name=com.future.demo.util.TableMyPreciseShardingAlgorithm
#spring.shardingsphere.sharding.tables.t_order_detail.database-strategy.inline.sharding-column=orderId
#spring.shardingsphere.sharding.tables.t_order_detail.database-strategy.inline.algorithm-expression=ds$->{orderId%5+1}
#spring.shardingsphere.sharding.tables.t_order_detail.table-strategy.inline.sharding-column=orderId
#spring.shardingsphere.sharding.tables.t_order_detail.table-strategy.inline.algorithm-expression=t_order_detail$->{orderId%32+1}
## \u7ED1\u5B9A\u8868\u5173\u952E\u914D\u7F6E
#spring.shardingsphere.sharding.binding-tables[0]=t_order,t_order_detail
#
#spring.shardingsphere.sharding.tables.t_order_index_list_by_userid.key-generator.column=id
#spring.shardingsphere.sharding.tables.t_order_index_list_by_userid.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.t_order_index_list_by_userid.actual-data-nodes=ds$->{1..5}.t_order_index_list_by_userid$->{1..32}
#spring.shardingsphere.sharding.tables.t_order_index_list_by_userid.database-strategy.inline.sharding-column=userId
#spring.shardingsphere.sharding.tables.t_order_index_list_by_userid.database-strategy.inline.algorithm-expression=ds$->{userId%5+1}
#spring.shardingsphere.sharding.tables.t_order_index_list_by_userid.table-strategy.inline.sharding-column=userId
#spring.shardingsphere.sharding.tables.t_order_index_list_by_userid.table-strategy.inline.algorithm-expression=t_order_index_list_by_userid$->{userId%32+1}
#------------------------------------------- \u6C34\u5E73\u5206\u5E93\u5206\u8868 -------------------------------------------

# \u6253\u5F00sql\u8F93\u51FA\u65E5\u5FD7
#spring.shardingsphere.props.sql.show=true

mybatis.mapper-locations=classpath:mapper/*.xml,classpath:mapper/**/*.xml

logging.level.com.future.demo=info
#logging.level.root=debug

# \u542F\u7528\u96EA\u82B1\u7B97\u6CD5\u751F\u6210\u5206\u5E03\u5F0FID
leaf.snowflake.enable=true
# zookeeper\u5730\u5740
leaf.snowflake.address=${common_zookeeper_host:localhost}:2181
# Leaf \u901A\u8FC7\u7B2C\u4E00\u4E2A\u7F51\u5361 ip\u5730\u5740+leaf.snowflake.port \u751F\u6210 wokerId\uFF0C
# \u5982\u679C\u5728\u540C\u4E00\u53F0\u4E3B\u673A\u4E2D\u8FD0\u884C\u4E24\u4E2A Leaf \u670D\u52A1\uFF0C\u5219 workerId \u4F1A\u91CD\u590D\uFF0C
# \u901A\u8FC7\u624B\u52A8\u914D\u7F6E\u968F\u673A\u751F\u6210 leaf.snowflake.port \u907F\u514D\u91CD\u590D\u7684 workerId
leaf.snowflake.port=${random.int%1000000000}

totalCount=5000000

# \u968F\u673Aid\u9009\u62E9\u5668\u670D\u52A1ip\u5730\u5740
spring.future.random.id.picker.host=${random_id_picker_host:localhost}
# \u968F\u673Aid\u9009\u62E9\u5668\u670D\u52A1\u7AEF\u53E3
spring.future.random.id.picker.port=${random_id_picker_port:50000}
# \u968F\u673Aid\u9009\u62E9\u5668\u670D\u52A1\u672C\u5730\u7F13\u5B58id\u6700\u5927\u603B\u6570
spring.future.random.id.picker.cache-size=102400
# \u968F\u673Aid\u9009\u62E9\u5668\u670D\u52A1\u652F\u6301\u7684flag\u5217\u8868
spring.future.random.id.picker.flag-list=order

# \u8BA1\u6570\u5668\u670D\u52A1ip\u5730\u5740
spring.future.count.host=${future_count_host:localhost}
# \u8BA1\u6570\u5668\u670D\u52A1\u7AEF\u53E3
spring.future.count.port=${future_count_port:50001}
# \u8BA1\u6570\u5668\u670D\u52A1\u652F\u6301\u7684flag\u5217\u8868
spring.future.count.flag-list=order
