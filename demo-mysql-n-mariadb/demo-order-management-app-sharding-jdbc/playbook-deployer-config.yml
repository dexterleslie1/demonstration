- name: "复制deployer"
  hosts: "{{ groups['all'] | difference(groups['management']) }}"
  tasks:
    - name: "复制deployer目录到远程"
      copy:
        src: deployer/
        dest: ~/deployer-order-management-app-sharding

- name: "配置db服务的deployer"
  hosts: db
  tasks:
    - name: "配置数据库服务的innodb-buffer-pool-size"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/db/.env
        regexp: "^innodb_buffer_pool_size="
        line: "innodb_buffer_pool_size={{ innodb_buffer_pool_size }}"

- name: "配置sharding-db服务的deployer"
  hosts: sharding-db
  tasks:
    - name: "配置数据库服务的innodb-buffer-pool-size"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/db/.env
        regexp: "^innodb_buffer_pool_size="
        line: "innodb_buffer_pool_size={{ innodb_buffer_pool_size }}"

- name: "配置openresty服务的deployer"
  hosts: openresty
  tasks:
    - name: "配置OpenResty服务的nginx.conf"
      template:
        src: deployer/openresty/nginx.conf.j2
        dest: ~/deployer-order-management-app-sharding/openresty/nginx.conf

- name: "配置api服务的deployer"
  hosts: api
  tasks:
    - name: "配置api服务的common_db_host"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/service/.env
        regexp: "^common_db_host="
        line: "common_db_host={{ groups['common'][0] }}"

    - name: "配置api服务的sharding_db_host1"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/service/.env
        regexp: "^sharding_db_host1="
        line: "sharding_db_host1={{ groups['sharding-db'][0] }}"
      when: groups['sharding-db'] | count >= 1
    - name: "配置api服务的sharding_db_host2"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/service/.env
        regexp: "^sharding_db_host2="
        line: "sharding_db_host2={{ groups['sharding-db'][1] }}"
      when: groups['sharding-db'] | count >= 2
    - name: "配置api服务的sharding_db_host3"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/service/.env
        regexp: "^sharding_db_host3="
        line: "sharding_db_host3={{ groups['sharding-db'][2] }}"
      when: groups['sharding-db'] | count >= 3
    - name: "配置api服务的sharding_db_host4"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/service/.env
        regexp: "^sharding_db_host4="
        line: "sharding_db_host4={{ groups['sharding-db'][3] }}"
      when: groups['sharding-db'] | count >= 4
    - name: "配置api服务的sharding_db_host5"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/service/.env
        regexp: "^sharding_db_host5="
        line: "sharding_db_host5={{ groups['sharding-db'][4] }}"
      when: groups['sharding-db'] | count >= 5

    - name: "配置api服务的common_zookeeper_host"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/service/.env
        regexp: "^common_zookeeper_host="
        line: "common_zookeeper_host={{ groups['common'][0] }}"
    - name: "配置api服务的random_id_picker_host"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/service/.env
        regexp: "^random_id_picker_host="
        line: "random_id_picker_host={{ groups['common'][0] }}"
    - name: "配置api服务的future_count_host"
      lineinfile:
        path: ~/deployer-order-management-app-sharding/service/.env
        regexp: "^future_count_host="
        line: "future_count_host={{ groups['common'][0] }}"

- name: "配置Prometheus服务的deployer"
  hosts: common
  tasks:
    - name: "配置Prometheus服务的prometheus.yml"
      template:
        src: deployer/prometheus/prometheus.yml.j2
        dest: ~/deployer-order-management-app-sharding/prometheus/prometheus.yml
