# todo 运行harbor服务
- hosts: all
  vars:
    project_folder: ""
    project_repo_name: ""
  tasks:
    - name: "保证unzip命令已经安装"
      yum:
        name: unzip
        state: installed

    - name: "yum install yum-utils -y"
      yum:
        name: yum-utils
        state: installed

    - name: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
      shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    - name: "yum remove podman-manpages"
      yum:
        name: podman-manpages
        state: removed

    - name: "yum remove podman"
      yum:
        name: podman
        state: removed

    - name: "下载docker-23.0.5-1-rpms.zip到目录/tmp"
      get_url:
        url: https://bucketxyh.oss-cn-hongkong.aliyuncs.com/docker/docker-23.0.5-1-rpms.zip
        dest: /tmp/docker-23.0.5-1-rpms.zip
        checksum: md5:4e08a727cd89b9f7ea33a4de5464723b
    - name: "解压/tmp/docker-23.0.5-1-rpms.zip到/tmp/docker-23.0.5-1-rpms"
      shell: rm -rf /tmp/docker-23.0.5-1-rpms && unzip /tmp/docker-23.0.5-1-rpms.zip -d /tmp/docker-23.0.5-1-rpms

    - name: "使用yum命令安装docker"
      shell: cd /tmp/docker-23.0.5-1-rpms && yum install -y *.rpm --allowerasing

    - name: "mkdir -p /etc/docker"
      shell: mkdir -p /etc/docker
      ignore_errors: yes

    - name: "copy daemon.json to /etc/docker/daemon.json"
      copy:
        src: daemon.json
        dest: /etc/docker/daemon.json

    - name: "systemctl enable docker and systemctl start docker"
      systemd:
        name: docker
        state: restarted
        enabled: yes

    - name: "Download docker-compose-Linux-x86_64"
      get_url:
       url: https://bucketxyh.oss-cn-hongkong.aliyuncs.com/docker/docker-compose-Linux-x86_64
       dest: /tmp/docker-compose-Linux-x86_64
       checksum: md5:8f68ae5d2334eecb0ee50b809b5cec58
    - name: "cp /tmp/docker-compose-Linux-x86_64 /usr/local/bin/docker-compose"
      shell: cp /tmp/docker-compose-Linux-x86_64 /usr/local/bin/docker-compose
    - name: "ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose"
      shell: ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
      ignore_errors: yes
    - name: "chmod +x /usr/local/bin/docker-compose"
      shell: chmod +x /usr/local/bin/docker-compose

    - name: "安装git命令"
      yum:
        name: git
        state: installed

    - name: "重启系统"
      reboot:

    #region 运行和设置jenkins、gitlab、harbor

    - name: "复制docker-compose.yml到/usr/local/my-workspace/"
      copy:
        src: docker-compose.yml
        dest: /usr/local/my-workspace/
    - name: "复制Dockerfile到/usr/local/my-workspace/"
      copy:
        src: Dockerfile
        dest: /usr/local/my-workspace/
    - name: "复制plugins.txt到/usr/local/my-workspace/"
      copy:
        src: plugins.txt
        dest: /usr/local/my-workspace/
    - name: "复制casc.yaml到/usr/local/my-workspace/"
      copy:
        src: casc.yaml
        dest: /usr/local/my-workspace/

    - name: "使用docker-compose运行jenkins和gitlab，在此需要到远程拉取jenkins和gitlab镜像需要耐心等待一段比较长时间"
      shell: cd /usr/local/my-workspace && docker-compose up -d

    - name: "复制harbor-online-installer-v2.5.3.tgz到/usr/local/my-workspace"
      copy:
        src: harbor-online-installer-v2.5.3.tgz
        dest: /usr/local/my-workspace/
    - name: "解压harbor-online-installer-v2.5.3.tgz"
      shell: cd /usr/local/my-workspace && tar -xvzf harbor-online-installer-v2.5.3.tgz
    - name: "复制harbor.yml到/usr/local/my-workspace/harbor/harbor.yml"
      copy:
        src: harbor.yml
        dest: /usr/local/my-workspace/harbor/harbor.yml
    - name: "正在启动harbor服务，下载相关镜像可能需要等待一段比较长时间。。。"
      shell: cd /usr/local/my-workspace/harbor/ && sh install.sh

    - name: "创建harbor项目demo-devops"
      shell: "curl --fail -u admin:Harbor12345 -X POST http://192.168.1.151:81/api/v2.0/projects -d '{\"project_name\": \"demo-devops\"}' -H \"Content-Type: application/json\""
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 5
    - name: "配置harbor gc策略"
      shell: "curl --fail -u admin:Harbor12345 -X PUT http://192.168.1.151:81/api/v2.0/system/gc/schedule -d '{\"parameters\":{\"delete_untagged\":true},\"schedule\":{\"cron\":\"0 0 0 * * *\",\"type\":\"Daily\"}}' -H \"Content-Type: application/json\""
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 5

    # todo 自动配置jenkins windows slave

    #endregion

    #region 自动创建demo-devops仓库

    - name: "设置变量project_folder、project_repo_name"
      set_fact:
        project_folder: "demo-devops"
        project_repo_name: "demo-devops"
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent

    - name: "克隆{{ project_folder }}仓库"
      git:
        repo: http://root:token-string-here123456@localhost/root/{{ project_repo_name }}.git
        dest: /usr/local/my-workspace/{{ project_folder }}-temp
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "因为创建仓库时initialize_with_readme，偶尔克隆仓库后版本落后于服务器版本，所以休眠一点时间等待initialize_with_readme完毕"
      shell: sleep 5

    - name: "复制{{ project_folder }}目录到/usr/local/my-workspace/"
      copy:
        src: "{{ project_folder }}"
        dest: /usr/local/my-workspace/

    - name: "推送代码到远程"
      shell: |
        cd /usr/local/my-workspace/{{ project_folder }}-temp/
        rm -rf *
        cp -r ../{{ project_folder }}/* .
        git add .
        git commit -m '初始化提交'
        git push
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent

    #endregion

    #region 自动创建demo-devops-architecture-parent仓库

    - name: "设置变量project_folder、project_repo_name"
      set_fact:
        project_folder: "architecture-parent"
        project_repo_name: "demo-devops-architecture-parent"
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent

    - name: "克隆{{ project_folder }}仓库"
      git:
        repo: http://root:token-string-here123456@localhost/root/{{ project_repo_name }}.git
        dest: /usr/local/my-workspace/{{ project_folder }}-temp
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "因为创建仓库时initialize_with_readme，偶尔克隆仓库后版本落后于服务器版本，所以休眠一点时间等待initialize_with_readme完毕"
      shell: sleep 5

    - name: "复制demo-devops-architecture/{{ project_folder }}目录到/usr/local/my-workspace/"
      copy:
        src: "demo-devops-architecture/{{ project_folder }}"
        dest: /usr/local/my-workspace/

    - name: "推送代码到远程"
      shell: |
        cd /usr/local/my-workspace/{{ project_folder }}-temp/
        rm -rf *
        cp -r ../{{ project_folder }}/* .
        cp -r ../{{ project_folder }}/.gitignore .
        git add .
        git commit -m '初始化提交'
        git push
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent

    #endregion

    #region 自动创建demo-devops-architecture-eureka仓库

    - name: "设置变量project_folder、project_repo_name"
      set_fact:
        project_folder: "architecture-eureka"
        project_repo_name: "demo-devops-architecture-eureka"
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent

    - name: "克隆{{ project_folder }}仓库"
      git:
        repo: http://root:token-string-here123456@localhost/root/{{ project_repo_name }}.git
        dest: /usr/local/my-workspace/{{ project_folder }}-temp
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "因为创建仓库时initialize_with_readme，偶尔克隆仓库后版本落后于服务器版本，所以休眠一点时间等待initialize_with_readme完毕"
      shell: sleep 5

    - name: "复制demo-devops-architecture/{{ project_folder }}目录到/usr/local/my-workspace/"
      copy:
        src: "demo-devops-architecture/{{ project_folder }}"
        dest: /usr/local/my-workspace/

    - name: "推送代码到远程"
      shell: |
        cd /usr/local/my-workspace/{{ project_folder }}-temp/
        rm -rf *
        cp -r ../{{ project_folder }}/* .
        cp -r ../{{ project_folder }}/.gitignore .
        git add .
        git commit -m '初始化提交'
        git push
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent

    #endregion

    #region 自动创建demo-devops-architecture-zuul仓库

    - name: "设置变量project_folder、project_repo_name"
      set_fact:
        project_folder: "architecture-zuul"
        project_repo_name: "demo-devops-architecture-zuul"
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent

    - name: "克隆{{ project_folder }}仓库"
      git:
        repo: http://root:token-string-here123456@localhost/root/{{ project_repo_name }}.git
        dest: /usr/local/my-workspace/{{ project_folder }}-temp
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "因为创建仓库时initialize_with_readme，偶尔克隆仓库后版本落后于服务器版本，所以休眠一点时间等待initialize_with_readme完毕"
      shell: sleep 5

    - name: "复制demo-devops-architecture/{{ project_folder }}目录到/usr/local/my-workspace/"
      copy:
        src: "demo-devops-architecture/{{ project_folder }}"
        dest: /usr/local/my-workspace/

    - name: "推送代码到远程"
      shell: |
        cd /usr/local/my-workspace/{{ project_folder }}-temp/
        rm -rf *
        cp -r ../{{ project_folder }}/* .
        cp -r ../{{ project_folder }}/.gitignore .
        git add .
        git commit -m '初始化提交'
        git push
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent

    #endregion

    #region 自动创建demo-devops-architecture-common仓库

    - name: "设置变量project_folder、project_repo_name"
      set_fact:
        project_folder: "architecture-common"
        project_repo_name: "demo-devops-architecture-common"
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent

    - name: "克隆{{ project_folder }}仓库"
      git:
        repo: http://root:token-string-here123456@localhost/root/{{ project_repo_name }}.git
        dest: /usr/local/my-workspace/{{ project_folder }}-temp
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "因为创建仓库时initialize_with_readme，偶尔克隆仓库后版本落后于服务器版本，所以休眠一点时间等待initialize_with_readme完毕"
      shell: sleep 5

    - name: "复制demo-devops-architecture/{{ project_folder }}目录到/usr/local/my-workspace/"
      copy:
        src: "demo-devops-architecture/{{ project_folder }}"
        dest: /usr/local/my-workspace/

    - name: "推送代码到远程"
      shell: |
        cd /usr/local/my-workspace/{{ project_folder }}-temp/
        rm -rf *
        cp -r ../{{ project_folder }}/* .
        cp -r ../{{ project_folder }}/.gitignore .
        git add .
        git commit -m '初始化提交'
        git push
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent

    #endregion

    #region 自动创建demo-devops-architecture-helloworld仓库

    - name: "设置变量project_folder、project_repo_name"
      set_fact:
        project_folder: "architecture-helloworld"
        project_repo_name: "demo-devops-architecture-helloworld"
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent

    - name: "克隆{{ project_folder }}仓库"
      git:
        repo: http://root:token-string-here123456@localhost/root/{{ project_repo_name }}.git
        dest: /usr/local/my-workspace/{{ project_folder }}-temp
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "因为创建仓库时initialize_with_readme，偶尔克隆仓库后版本落后于服务器版本，所以休眠一点时间等待initialize_with_readme完毕"
      shell: sleep 5

    - name: "复制demo-devops-architecture/{{ project_folder }}目录到/usr/local/my-workspace/"
      copy:
        src: "demo-devops-architecture/{{ project_folder }}"
        dest: /usr/local/my-workspace/

    - name: "推送代码到远程"
      shell: |
        cd /usr/local/my-workspace/{{ project_folder }}-temp/
        rm -rf *
        cp -r ../{{ project_folder }}/* .
        cp -r ../{{ project_folder }}/.gitignore .
        git add .
        git commit -m '初始化提交'
        git push
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent

    #endregion

    #region 自动创建demo-devops-architecture-deployer仓库

    - name: "设置变量project_folder、project_repo_name"
      set_fact:
        project_folder: "architecture-deployer"
        project_repo_name: "demo-devops-architecture-deployer"
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent

    - name: "克隆{{ project_folder }}仓库"
      git:
        repo: http://root:token-string-here123456@localhost/root/{{ project_repo_name }}.git
        dest: /usr/local/my-workspace/{{ project_folder }}-temp
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "因为创建仓库时initialize_with_readme，偶尔克隆仓库后版本落后于服务器版本，所以休眠一点时间等待initialize_with_readme完毕"
      shell: sleep 5

    - name: "复制demo-devops-architecture/{{ project_folder }}目录到/usr/local/my-workspace/"
      copy:
        src: "demo-devops-architecture/{{ project_folder }}"
        dest: /usr/local/my-workspace/

    - name: "推送代码到远程"
      shell: |
        cd /usr/local/my-workspace/{{ project_folder }}-temp/
        rm -rf *
        cp -r ../{{ project_folder }}/* .
        cp -r ../{{ project_folder }}/.gitignore .
        git add .
        git commit -m '初始化提交'
        git push
      register: var_result
      until: "var_result is not failed"
      retries: 200
      delay: 6

    - name: "删除 /usr/local/my-workspace/{{ project_folder }} 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}
        state: absent
    - name: "删除 /usr/local/my-workspace/{{ project_folder }}-temp 目录"
      file:
        path: /usr/local/my-workspace/{{ project_folder }}-temp
        state: absent

    #endregion

